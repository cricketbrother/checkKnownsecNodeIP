name: Auto Build

on:
    push:
        branches:
            - main
    workflow_dispatch:

permissions:
    contents: write

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Set Timezone
              run: |
                sudo -E timedatectl set-timezone Asia/Shanghai

            - name: Set Tag
              id: tag
              run: |
                tag=$(date +"v%Y.%m.%d.%H%M%S")
                echo "tag=$tag" >> $GITHUB_OUTPUT

            - name: Checkout
              uses: actions/checkout@main

            - name: Setup Go
              uses: actions/setup-go@main
              with:
                go-version: 'stable'
                check-latest: true

            - name: Download GeoLite-City.mmdb
              run: |
                response_headers=$(curl -I -s -X HEAD  "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=${{ secrets.MAXMIND_LICENSE_KEY }}&suffix=tar.gz")
                filename=$(echo "$response_headers" | grep -i '^Content-Disposition:' | sed -e 's/^.*filename=//' | tr -d '\r')
                curl -s -L -o "$filename" "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=${{ secrets.MAXMIND_LICENSE_KEY }}&suffix=tar.gz"
                tar -xzf "$filename" --strip-components=1 --wildcards --no-anchored '*/GeoLite2-City.mmdb'


            - name: Build
              run: |
                GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.version=${{ steps.tag.outputs.tag }}" -o ./bin/checkKnownsecNodeIP.darwin.amd64.${{ steps.tag.outputs.tag }} ./
                GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.version=${{ steps.tag.outputs.tag }}" -o ./bin/checkKnownsecNodeIP.darwin.arm64.${{ steps.tag.outputs.tag }} ./
                GOOS=linux GOARCH=386 go build -ldflags "-X main.version=${{ steps.tag.outputs.tag }}" -o ./bin/checkKnownsecNodeIP.linux.386.${{ steps.tag.outputs.tag }} ./
                GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=${{ steps.tag.outputs.tag }}" -o ./bin/checkKnownsecNodeIP.linux.amd64.${{ steps.tag.outputs.tag }} ./
                GOOS=windows GOARCH=386 go build -ldflags "-X main.version=${{ steps.tag.outputs.tag }}" -o ./bin/checkKnownsecNodeIP.windows.386.${{ steps.tag.outputs.tag }}.exe ./
                GOOS=windows GOARCH=amd64 go build -ldflags "-X main.version=${{ steps.tag.outputs.tag }}" -o ./bin/checkKnownsecNodeIP.windows.amd64.${{ steps.tag.outputs.tag }}.exe ./

            - name: Upload Release Assets
              uses: softprops/action-gh-release@master
              with:
                files: bin/*
                tag_name: ${{ steps.tag.outputs.tag }}
                draft: false
                prerelease: false
                generate_release_notes: true